@mixin state-element-selector($state-element: 'checkmark') {
	.yt-checkbox {
		&--container {
			&--#{$state-element} {
				@content;
			}
		}
	}
}

$checkbox-size: 16px !default;
$focus-indicator-size: $checkbox-size * 2 !default;

:host {
	display: inline-flex;
	position: relative;
	height: $checkbox-size;
	outline: none;
	vertical-align: top;
}

input {
	position: absolute;
	z-index: -1;
	margin: 0;
	outline: none;
	appearance: none;
	inset: 0;
}

.yt-checkbox {
	&--container {
		display: inline-flex;
		position: relative;
		align-items: center;
		justify-content: center;
		width: $checkbox-size;
		height: $checkbox-size;
		border-radius: 3px;
		background-color: white;
		cursor: pointer;

		&--outline {
			box-sizing: border-box;
			width: 100%;
			height: 100%;
			border: 1px solid var(--yt-color-primary-main);
			border-radius: inherit;
		}

		@include state-element-selector(checkmark) {
			display: none;
			position: absolute;
			z-index: 0;
			border-radius: inherit;
		}

		@include state-element-selector(indeterminate) {
			display: none;
			position: absolute;
			z-index: 0;
			width: calc(100% - 6px);
			height: 3px;
			border-radius: inherit;
			background-color: var(--yt-color-primary-light);
		}

		@include state-element-selector(focus-indicator) {
			display: block;
			position: absolute;
			z-index: -1;
			width: $focus-indicator-size;
			height: $focus-indicator-size;
			transform: scale(0);
			transition: 150ms;
			border-radius: 50%;
			opacity: 0.1;
			background-color: grey;
		}

		&--checked:not(&--indeterminate) {
			@include state-element-selector(checkmark) {
				display: block;
				background-color: var(--yt-color-primary-light);
				fill: var(--yt-primary-text-contrast);
			}
		}

		&--focused {
			@include state-element-selector('focus-indicator') {
				transform: scale(1);
				opacity: 0.15;
			}
		}

		&--indeterminate {
			@include state-element-selector(indeterminate) {
				display: block;
			}
		}

		&:hover {
			&:not(&--checked) {
				@include state-element-selector(checkmark) {
					display: block;
					opacity: 0.25;
				}
			}

			@include state-element-selector('focus-indicator') {
				transform: scale(1);
				opacity: 0.15;
			}
		}
	}
}
